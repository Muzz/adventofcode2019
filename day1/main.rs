// find the mass to launch a given module.

// floor(mass / 3) - 2

fn main() {
    let mut input = vec![
        51360.0, 95527.0, 72603.0, 128601.0, 68444.0, 138867.0, 67294.0, 134343.0, 62785.0,
        53088.0, 134635.0, 137884.0, 97654.0, 103704.0, 138879.0, 87561.0, 83922.0, 68414.0,
        84876.0, 105143.0, 76599.0, 98924.0, 57080.0, 63590.0, 50126.0, 111872.0, 55754.0, 64410.0,
        78488.0, 56557.0, 105446.0, 127182.0, 59451.0, 87249.0, 61652.0, 131698.0, 148820.0,
        95742.0, 68223.0, 121744.0, 65678.0, 99745.0, 64089.0, 75610.0, 106085.0, 100364.0,
        116959.0, 122862.0, 56580.0, 109631.0, 82895.0, 79666.0, 133474.0, 50579.0, 83473.0,
        140028.0, 125999.0, 68225.0, 131345.0, 90797.0, 84914.0, 81915.0, 65369.0, 71230.0,
        50379.0, 106385.0, 118503.0, 119640.0, 138540.0, 70678.0, 95881.0, 100282.0, 123060.0,
        147368.0, 93030.0, 82553.0, 131271.0, 147675.0, 111126.0, 115183.0, 82956.0, 145698.0,
        99261.0, 52768.0, 99207.0, 123551.0, 64738.0, 117275.0, 98136.0, 111592.0, 78576.0,
        118613.0, 130351.0, 68567.0, 72356.0, 85608.0, 129414.0, 66521.0, 76924.0, 130449.0,
    ];
    // let mut input = vec![12.0];

    fn calculateMass(mass: f32) -> f32 {
        (mass / 3.0).floor() - 2.0
    }

    let mut sum = 0.0;
    for i in input {
        sum += calculateMass(i);
        // println!("{:?}", calculateMass(i));
    }

    println!("{:?}", sum);
}
